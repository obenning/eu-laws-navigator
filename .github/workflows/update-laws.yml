# .github/workflows/update-laws.yml
name: üá™üá∫ EU-Gesetze Auto-Update

on:
  # T√§glich um 6:00 Uhr MEZ
  schedule:
    - cron: '0 4 * * *'  # 4 UTC = 6 MEZ im Winter, 5 MEZ im Sommer
  
  # Manuell ausl√∂sbar √ºber GitHub Interface
  workflow_dispatch:
  
  # Bei Push auf main branch (f√ºr Tests)
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/update-laws.yml'

permissions:
  contents: write  # Erm√∂glicht das Schreiben in das Repository

jobs:
  update-eu-laws:
    runs-on: ubuntu-latest
    
    steps:
    - name: üìÇ Repository auschecken
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: üìÅ Laws-Ordner vorbereiten
      run: |
        # Entferne existing laws falls es eine Datei ist
        if [ -f laws ]; then
          echo "‚ö†Ô∏è 'laws' ist eine Datei - wird gel√∂scht"
          rm laws
        fi
        
        # Erstelle laws Ordner falls er nicht existiert
        if [ ! -d laws ]; then
          echo "üìÅ Erstelle laws Ordner"
          mkdir laws
        else
          echo "‚úÖ laws Ordner existiert bereits"
        fi
        
        # Bereinige alte Dateien (optional)
        echo "üßπ Bereinige laws Ordner"
        rm -f laws/*.html
      
    - name: üèõÔ∏è EU-Geldw√§scheverordnung 2024 herunterladen
      run: |
        echo "üì• Lade EU-Geldw√§scheverordnung 2024..."
        curl -L -A "Mozilla/5.0 (GitHub-Actions)" \
          "https://eur-lex.europa.eu/legal-content/DE/TXT/HTML/?uri=CELEX:32024R1624" \
          -o laws/eu-aml-2024.html \
          --connect-timeout 30 \
          --max-time 300 \
          --retry 3
        
        # Pr√ºfe ob Datei g√ºltig ist
        if [ -f laws/eu-aml-2024.html ] && [ $(wc -c < laws/eu-aml-2024.html) -gt 10000 ]; then
          echo "‚úÖ EU-Geldw√§scheverordnung erfolgreich geladen: $(wc -c < laws/eu-aml-2024.html) Bytes"
        else
          echo "‚ùå EU-Geldw√§scheverordnung Download fehlgeschlagen"
          exit 1
        fi
    
    - name: üîí EU-Datenschutz-Grundverordnung (GDPR) herunterladen
      run: |
        echo "üì• Lade GDPR..."
        curl -L -A "Mozilla/5.0 (GitHub-Actions)" \
          "https://eur-lex.europa.eu/legal-content/DE/TXT/HTML/?uri=CELEX:32016R0679" \
          -o laws/eu-gdpr-2016.html \
          --connect-timeout 30 \
          --max-time 300 \
          --retry 3
        
        if [ -f laws/eu-gdpr-2016.html ] && [ $(wc -c < laws/eu-gdpr-2016.html) -gt 10000 ]; then
          echo "‚úÖ GDPR erfolgreich geladen: $(wc -c < laws/eu-gdpr-2016.html) Bytes"
        else
          echo "‚ùå GDPR Download fehlgeschlagen"
          exit 1
        fi
        
    - name: ü§ñ EU-KI-Verordnung (AI Act) herunterladen
      run: |
        echo "üì• Lade AI Act..."
        curl -L -A "Mozilla/5.0 (GitHub-Actions)" \
          "https://eur-lex.europa.eu/legal-content/DE/TXT/HTML/?uri=CELEX:32024R1689" \
          -o laws/eu-ai-act-2024.html \
          --connect-timeout 30 \
          --max-time 300 \
          --retry 3
        
        if [ -f laws/eu-ai-act-2024.html ] && [ $(wc -c < laws/eu-ai-act-2024.html) -gt 10000 ]; then
          echo "‚úÖ AI Act erfolgreich geladen: $(wc -c < laws/eu-ai-act-2024.html) Bytes"
        else
          echo "‚ùå AI Act Download fehlgeschlagen"
          exit 1
        fi
        
    - name: üåê Digital Services Act (DSA) herunterladen
      run: |
        echo "üì• Lade DSA..."
        curl -L -A "Mozilla/5.0 (GitHub-Actions)" \
          "https://eur-lex.europa.eu/legal-content/DE/TXT/HTML/?uri=CELEX:32022R2065" \
          -o laws/eu-dsa-2022.html \
          --connect-timeout 30 \
          --max-time 300 \
          --retry 3
        
        if [ -f laws/eu-dsa-2022.html ] && [ $(wc -c < laws/eu-dsa-2022.html) -gt 10000 ]; then
          echo "‚úÖ DSA erfolgreich geladen: $(wc -c < laws/eu-dsa-2022.html) Bytes"
        else
          echo "‚ùå DSA Download fehlgeschlagen"
          exit 1
        fi

    # ===== DEUTSCHE GESETZE - ROBUSTE STRATEGIE =====
    
    - name: üè¶ Deutsche Gesetze herunterladen (mit Fallbacks)
      run: |
        echo "üì• Starte Download deutscher Gesetze mit Fallback-Strategien..."
        
        # Funktion f√ºr robusten Download
        download_german_law() {
          local law_name="$1"
          local primary_url="$2"
          local fallback_url="$3"
          local output_file="$4"
          local min_size="$5"
          
          echo "üîÑ Versuche $law_name..."
          
          # Strategie 1: Prim√§re URL mit verschiedenen User-Agents
          for user_agent in \
            "Mozilla/5.0 (GitHub-Actions)" \
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36" \
            "curl/7.68.0"; do
            
            echo "  üîÑ Versuche prim√§re URL mit UA: $user_agent"
            if curl -L -A "$user_agent" \
              "$primary_url" \
              -o "$output_file" \
              --connect-timeout 15 \
              --max-time 120 \
              --retry 2 \
              --retry-delay 5 \
              --retry-max-time 300 \
              --silent \
              --fail; then
              
              # Pr√ºfe Dateigr√∂√üe
              if [ -f "$output_file" ] && [ $(wc -c < "$output_file") -gt $min_size ]; then
                echo "  ‚úÖ $law_name erfolgreich geladen: $(wc -c < "$output_file") Bytes"
                return 0
              fi
            fi
            
            echo "  ‚ùå Versuch mit UA '$user_agent' fehlgeschlagen"
            sleep 2
          done
          
          # Strategie 2: Fallback-URL (falls verf√ºgbar)
          if [ -n "$fallback_url" ]; then
            echo "  üîÑ Versuche Fallback-URL..."
            if curl -L -A "Mozilla/5.0 (GitHub-Actions)" \
              "$fallback_url" \
              -o "$output_file" \
              --connect-timeout 10 \
              --max-time 60 \
              --retry 1 \
              --silent \
              --fail; then
              
              if [ -f "$output_file" ] && [ $(wc -c < "$output_file") -gt $min_size ]; then
                echo "  ‚úÖ $law_name per Fallback geladen: $(wc -c < "$output_file") Bytes"
                return 0
              fi
            fi
          fi
          
          # Strategie 3: Erstelle Fallback-HTML
          echo "  ‚ö†Ô∏è $law_name nicht verf√ºgbar - erstelle Fallback"
          create_fallback_html "$law_name" "$output_file"
          return 1
        }
        
        # Funktion f√ºr Fallback-HTML
        create_fallback_html() {
          local law_name="$1"
          local output_file="$2"
          
          cat > "$output_file" << 'FALLBACK_EOF'
        <!DOCTYPE html>
        <html lang="de">
        <head>
          <meta charset="UTF-8">
          <title>FALLBACK_LAW_NAME - Fallback</title>
        </head>
        <body>
          <div id="fallback_notice">
            <h1>FALLBACK_LAW_NAME</h1>
            <div class="notice">
              <p><strong>‚ö†Ô∏è Automatischer Download nicht verf√ºgbar</strong></p>
              <p>Das Gesetz konnte nicht automatisch von der offiziellen Quelle geladen werden.</p>
              <p><strong>Offizielle Quelle:</strong> <a href="https://www.gesetze-im-internet.de" target="_blank">gesetze-im-internet.de</a></p>
              <p><strong>Letzter Versuch:</strong> $(date)</p>
            </div>
          </div>
        </body>
        </html>
        FALLBACK_EOF
          
          # Ersetze Platzhalter
          sed -i "s/FALLBACK_LAW_NAME/$law_name/g" "$output_file"
          sed -i "s/\$(date)/$(date)/g" "$output_file"
          
          echo "  üìÑ Fallback-HTML f√ºr $law_name erstellt"
        }
        
        # Download alle deutschen Gesetze
        success_count=0
        total_laws=10
        
        # 1. Geldw√§schegesetz (GwG)
        if download_german_law \
          "Geldw√§schegesetz (GwG)" \
          "https://www.gesetze-im-internet.de/gwg_2017/BJNR182210017.html" \
          "" \
          "laws/de-gwg-2017.html" \
          3000; then
          ((success_count++))
        fi
        
        # 2. Kreditwesengesetz (KWG)
        if download_german_law \
          "Kreditwesengesetz (KWG)" \
          "https://www.gesetze-im-internet.de/kwg/BJNR008810961.html" \
          "" \
          "laws/de-kwg.html" \
          3000; then
          ((success_count++))
        fi
        
        # 3. Zahlungsdiensteaufsichtsgesetz (ZAG)
        if download_german_law \
          "Zahlungsdiensteaufsichtsgesetz (ZAG)" \
          "https://www.gesetze-im-internet.de/zag_2018/BJNR194710017.html" \
          "" \
          "laws/de-zag-2018.html" \
          3000; then
          ((success_count++))
        fi
        
        # 4. Au√üenwirtschaftsgesetz (AWG)
        if download_german_law \
          "Au√üenwirtschaftsgesetz (AWG)" \
          "https://www.gesetze-im-internet.de/awg/BJNR107740961.html" \
          "" \
          "laws/de-awg.html" \
          3000; then
          ((success_count++))
        fi
        
        # 5. Au√üenwirtschaftsverordnung (AWV)
        if download_german_law \
          "Au√üenwirtschaftsverordnung (AWV)" \
          "https://www.gesetze-im-internet.de/awv_2013/BJNR144610013.html" \
          "" \
          "laws/de-awv-2013.html" \
          3000; then
          ((success_count++))
        fi
        
        # 6. Strafgesetzbuch (StGB)
        if download_german_law \
          "Strafgesetzbuch (StGB)" \
          "https://www.gesetze-im-internet.de/stgb/BJNR001270871.html" \
          "" \
          "laws/de-stgb.html" \
          3000; then
          ((success_count++))
        fi
        
        # 7. Versicherungsaufsichtsgesetz (VAG)
        if download_german_law \
          "Versicherungsaufsichtsgesetz (VAG)" \
          "https://www.gesetze-im-internet.de/vag_2016/BJNR043410015.html" \
          "" \
          "laws/de-vag-2016.html" \
          3000; then
          ((success_count++))
        fi
        
        # 8. Kapitalanlagegesetzbuch (KAGB)
        if download_german_law \
          "Kapitalanlagegesetzbuch (KAGB)" \
          "https://www.gesetze-im-internet.de/kagb/BJNR081010013.html" \
          "" \
          "laws/de-kagb.html" \
          3000; then
          ((success_count++))
        fi
        
        # 9. Wertpapierhandelsgesetz (WpHG)
        if download_german_law \
          "Wertpapierhandelsgesetz (WpHG)" \
          "https://www.gesetze-im-internet.de/wphg/BJNR024520007.html" \
          "" \
          "laws/de-wphg.html" \
          3000; then
          ((success_count++))
        fi
        
        # 10. EU-Sanktions-Durchf√ºhrungsgesetz
        if download_german_law \
          "EU-Sanktions-Durchf√ºhrungsgesetz" \
          "https://www.gesetze-im-internet.de/eusanktdg/BJNR281010992.html" \
          "" \
          "laws/de-eu-sanktdg.html" \
          3000; then
          ((success_count++))
        fi
        
        echo ""
        echo "üìä Deutsche Gesetze Download-Ergebnis:"
        echo "‚úÖ Erfolgreich: $success_count von $total_laws Gesetzen"
        echo "‚ö†Ô∏è Fallbacks: $((total_laws - success_count)) von $total_laws Gesetzen"
        
        if [ $success_count -eq 0 ]; then
          echo "‚ùå Kritisch: Keine deutschen Gesetze konnten geladen werden"
          echo "üí° Tipp: gesetze-im-internet.de k√∂nnte tempor√§r nicht verf√ºgbar sein"
        elif [ $success_count -lt 5 ]; then
          echo "‚ö†Ô∏è Warnung: Weniger als 50% der deutschen Gesetze geladen"
        else
          echo "‚úÖ Zufriedenstellend: Mehrheit der deutschen Gesetze geladen"
        fi
        
        # Workflow NICHT abbrechen - EU-Gesetze funktionieren weiterhin
        echo "üîÑ Workflow wird fortgesetzt..."
    
    - name: üìä Update-Metadaten erstellen
      run: |
        echo "üìä Erstelle Metadaten..."
        cat > laws/last-update.json << 'EOF'
        {
          "last_update": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
          "laws": {
            "eu-aml-2024": {
              "name": "EU-Geldw√§scheverordnung 2024",
              "celex": "32024R1624",
              "file": "eu-aml-2024.html",
              "type": "eu-regulation",
              "size": $(wc -c < laws/eu-aml-2024.html)
            },
            "eu-gdpr-2016": {
              "name": "EU-Datenschutz-Grundverordnung",
              "celex": "32016R0679", 
              "file": "eu-gdpr-2016.html",
              "type": "eu-regulation",
              "size": $(wc -c < laws/eu-gdpr-2016.html)
            },
            "eu-ai-act-2024": {
              "name": "EU-KI-Verordnung (AI Act)",
              "celex": "32024R1689",
              "file": "eu-ai-act-2024.html",
              "type": "eu-regulation", 
              "size": $(wc -c < laws/eu-ai-act-2024.html)
            },
            "eu-dsa-2022": {
              "name": "Digital Services Act",
              "celex": "32022R2065",
              "file": "eu-dsa-2022.html",
              "type": "eu-regulation",
              "size": $(wc -c < laws/eu-dsa-2022.html)
            },
            "de-gwg-2017": {
              "name": "Geldw√§schegesetz (GwG)",
              "file": "de-gwg-2017.html",
              "type": "german-law",
              "category": "aml",
              "size": $(wc -c < laws/de-gwg-2017.html)
            },
            "de-kwg": {
              "name": "Kreditwesengesetz (KWG)",
              "file": "de-kwg.html",
              "type": "german-law",
              "category": "banking",
              "size": $(wc -c < laws/de-kwg.html)
            },
            "de-zag-2018": {
              "name": "Zahlungsdiensteaufsichtsgesetz (ZAG)",
              "file": "de-zag-2018.html",
              "type": "german-law",
              "category": "payments",
              "size": $(wc -c < laws/de-zag-2018.html)
            },
            "de-awg": {
              "name": "Au√üenwirtschaftsgesetz (AWG)",
              "file": "de-awg.html",
              "type": "german-law",
              "category": "sanctions",
              "size": $(wc -c < laws/de-awg.html)
            },
            "de-awv-2013": {
              "name": "Au√üenwirtschaftsverordnung (AWV)",
              "file": "de-awv-2013.html",
              "type": "german-law",
              "category": "sanctions",
              "size": $(wc -c < laws/de-awv-2013.html)
            },
            "de-stgb": {
              "name": "Strafgesetzbuch (StGB)",
              "file": "de-stgb.html",
              "type": "german-law",
              "category": "criminal",
              "size": $(wc -c < laws/de-stgb.html)
            },
            "de-vag-2016": {
              "name": "Versicherungsaufsichtsgesetz (VAG)",
              "file": "de-vag-2016.html",
              "type": "german-law",
              "category": "insurance",
              "size": $(wc -c < laws/de-vag-2016.html)
            },
            "de-kagb": {
              "name": "Kapitalanlagegesetzbuch (KAGB)",
              "file": "de-kagb.html",
              "type": "german-law",
              "category": "investments",
              "size": $(wc -c < laws/de-kagb.html)
            },
            "de-wphg": {
              "name": "Wertpapierhandelsgesetz (WpHG)",
              "file": "de-wphg.html",
              "type": "german-law",
              "category": "securities",
              "size": $(wc -c < laws/de-wphg.html)
            },
            "de-eu-sanktdg": {
              "name": "EU-Sanktions-Durchf√ºhrungsgesetz",
              "file": "de-eu-sanktdg.html",
              "type": "german-law",
              "category": "sanctions",
              "size": $(wc -c < laws/de-eu-sanktdg.html)
            }
          }
        }
        EOF
        
        # Ersetze die Variablen
        sed -i "s/\$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")/$(date -u +"%Y-%m-%dT%H:%M:%SZ")/g" laws/last-update.json
        sed -i "s/\$(wc -c < laws\/eu-aml-2024.html)/$(wc -c < laws/eu-aml-2024.html)/g" laws/last-update.json
        sed -i "s/\$(wc -c < laws\/eu-gdpr-2016.html)/$(wc -c < laws/eu-gdpr-2016.html)/g" laws/last-update.json
        sed -i "s/\$(wc -c < laws\/eu-ai-act-2024.html)/$(wc -c < laws/eu-ai-act-2024.html)/g" laws/last-update.json
        sed -i "s/\$(wc -c < laws\/eu-dsa-2022.html)/$(wc -c < laws/eu-dsa-2022.html)/g" laws/last-update.json
        sed -i "s/\$(wc -c < laws\/de-gwg-2017.html)/$(wc -c < laws/de-gwg-2017.html)/g" laws/last-update.json
        sed -i "s/\$(wc -c < laws\/de-kwg.html)/$(wc -c < laws/de-kwg.html)/g" laws/last-update.json
        sed -i "s/\$(wc -c < laws\/de-zag-2018.html)/$(wc -c < laws/de-zag-2018.html)/g" laws/last-update.json
        sed -i "s/\$(wc -c < laws\/de-awg.html)/$(wc -c < laws/de-awg.html)/g" laws/last-update.json
        sed -i "s/\$(wc -c < laws\/de-awv-2013.html)/$(wc -c < laws/de-awv-2013.html)/g" laws/last-update.json
        sed -i "s/\$(wc -c < laws\/de-stgb.html)/$(wc -c < laws/de-stgb.html)/g" laws/last-update.json
        sed -i "s/\$(wc -c < laws\/de-vag-2016.html)/$(wc -c < laws/de-vag-2016.html)/g" laws/last-update.json
        sed -i "s/\$(wc -c < laws\/de-kagb.html)/$(wc -c < laws/de-kagb.html)/g" laws/last-update.json
        sed -i "s/\$(wc -c < laws\/de-wphg.html)/$(wc -c < laws/de-wphg.html)/g" laws/last-update.json
        sed -i "s/\$(wc -c < laws\/de-eu-sanktdg.html)/$(wc -c < laws/de-eu-sanktdg.html)/g" laws/last-update.json
        
        echo "‚úÖ Metadaten erstellt:"
        cat laws/last-update.json
    
    - name: üîç √Ñnderungen pr√ºfen
      id: changes
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changes_detected=true" >> $GITHUB_OUTPUT
          echo "üìù √Ñnderungen an den Gesetzen erkannt:"
          git status --porcelain
        else
          echo "changes_detected=false" >> $GITHUB_OUTPUT
          echo "‚úÖ Keine √Ñnderungen erkannt - Gesetze sind aktuell"
        fi
    
    - name: üíæ √Ñnderungen committen und pushen
      if: steps.changes.outputs.changes_detected == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "EU-Laws Auto-Update Bot"
        
        git add laws/
        git commit -m "ü§ñ Automatisches Update der EU-Gesetze - $(date +'%Y-%m-%d %H:%M')"
        
        echo "üöÄ Pushe Updates zum Repository..."
        git push
        
        echo "‚úÖ EU-Gesetze erfolgreich aktualisiert und gepusht!"
    
    - name: üìß Benachrichtigung bei √Ñnderungen oder Problemen
      if: steps.changes.outputs.changes_detected == 'true'
      run: |
        echo "üìß Gesetzesupdate-Benachrichtigung"
        echo ""
        echo "üîÑ Automatisches Update abgeschlossen:"
        echo "üìÖ Datum: $(date +'%Y-%m-%d %H:%M')"
        echo ""
        echo "‚úÖ EU-Verordnungen (immer verf√ºgbar):"
        echo "  - EU-Geldw√§scheverordnung 2024"
        echo "  - EU-Datenschutz-Grundverordnung (GDPR)"  
        echo "  - EU-KI-Verordnung (AI Act)"
        echo "  - Digital Services Act"
        echo ""
        echo "üèõÔ∏è Deutsche Gesetze (Verf√ºgbarkeit variiert):"
        
        # Pr√ºfe welche deutschen Gesetze erfolgreich geladen wurden
        de_success=0
        de_total=10
        
        for law_file in de-gwg-2017.html de-kwg.html de-zag-2018.html de-awg.html de-awv-2013.html de-stgb.html de-vag-2016.html de-kagb.html de-wphg.html de-eu-sanktdg.html; do
          if [ -f "laws/$law_file" ] && [ $(wc -c < "laws/$law_file") -gt 5000 ]; then
            ((de_success++))
            echo "  ‚úÖ $(basename "$law_file" .html)"
          else
            echo "  ‚ö†Ô∏è $(basename "$law_file" .html) (Fallback verwendet)"
          fi
        done
        
        echo ""
        echo "üìä Gesamtergebnis:"
        echo "  - EU-Gesetze: 4/4 ‚úÖ"
        echo "  - Deutsche Gesetze: $de_success/$de_total"
        
        if [ $de_success -lt 5 ]; then
          echo ""
          echo "‚ö†Ô∏è Hinweis: gesetze-im-internet.de war tempor√§r nicht verf√ºgbar."
          echo "   Fallback-Versionen wurden erstellt. N√§chster Versuch: Morgen 6:00 Uhr."
        fi
        
        echo ""
        echo "üîó Siehe: https://github.com/${{ github.repository }}/tree/main/laws"
        
        # Hier k√∂nnten Sie sp√§ter E-Mail oder Slack-Benachrichtigungen hinzuf√ºgen
    
    - name: ‚úÖ Workflow-Zusammenfassung
      run: |
        echo "üéâ EU-Gesetze und deutsche Gesetze Auto-Update abgeschlossen!"
        echo ""
        echo "üìä EU-Verordnungen:"
        echo "- EU-Geldw√§scheverordnung: $(wc -c < laws/eu-aml-2024.html) Bytes"
        echo "- GDPR: $(wc -c < laws/eu-gdpr-2016.html) Bytes"  
        echo "- AI Act: $(wc -c < laws/eu-ai-act-2024.html) Bytes"
        echo "- DSA: $(wc -c < laws/eu-dsa-2022.html) Bytes"
        echo ""
        echo "üìä Deutsche Gesetze - Geldw√§schepr√§vention & Sanktionen:"
        echo "- Geldw√§schegesetz (GwG): $(wc -c < laws/de-gwg-2017.html) Bytes"
        echo "- Kreditwesengesetz (KWG): $(wc -c < laws/de-kwg.html) Bytes"
        echo "- Zahlungsdiensteaufsichtsgesetz (ZAG): $(wc -c < laws/de-zag-2018.html) Bytes"
        echo "- Au√üenwirtschaftsgesetz (AWG): $(wc -c < laws/de-awg.html) Bytes"
        echo "- Au√üenwirtschaftsverordnung (AWV): $(wc -c < laws/de-awv-2013.html) Bytes"
        echo "- Strafgesetzbuch (StGB): $(wc -c < laws/de-stgb.html) Bytes"
        echo "- Versicherungsaufsichtsgesetz (VAG): $(wc -c < laws/de-vag-2016.html) Bytes"
        echo "- Kapitalanlagegesetzbuch (KAGB): $(wc -c < laws/de-kagb.html) Bytes"
        echo "- Wertpapierhandelsgesetz (WpHG): $(wc -c < laws/de-wphg.html) Bytes"
        echo "- EU-Sanktions-Durchf√ºhrungsgesetz: $(wc -c < laws/de-eu-sanktdg.html) Bytes"
        echo ""
        echo "‚è∞ N√§chstes Update: Morgen um 6:00 Uhr MEZ"
        echo "üîó Verf√ºgbar unter: https://github.com/${{ github.repository }}/tree/main/laws"
